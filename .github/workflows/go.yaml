name: Go

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch: # Enables the web UI manual trigger
  # Note: ^^ will fail the "tag-release" step if the git tag already exists

jobs:
  test-go:
    name: Test, Vet, Vulncheck Go code
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      matrix:
        go-version: ['oldstable', 'stable']
    env:
      CGO_ENABLED: 0
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4.1.7
        with:
          submodules: recursive

      - name: Set up Go
        uses: actions/setup-go@v5.0.1
        with:
          go-version: ${{ matrix.go-version }}
          # check-latest: true # not needed when using 'stable'

      - name: Run Go tests
        run: go test -v -bench . ./...

      - name: Run Go tests with race detector
        env:
          CGO_ENABLED: '1'
        run: go test -v -race ./...

      - name: Vet Go code
        run: go vet ./...

      - name: govulncheck
        uses: golang/govulncheck-action@v1.0.3
        with:
          cache: false
          repo-checkout: false

      - name: Verify repo is unchanged
        run: git diff --exit-code HEAD

  # Test with TinyGo
  test-tinygo-wasm:
    name: Test with WASM and TinyGo
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      matrix:
        tinygo-version: ['0.31.2'] # FIXME: this needs to be manually bumped; something should ping when a new version is available
        wasmtime-version: ['v21.0.1']

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4.1.7
        with:
          submodules: recursive

      - name: Set up Go
        uses: actions/setup-go@v5.0.1
        with:
          go-version: 'stable'

      - name: Set up TinyGo
        uses: acifani/setup-tinygo@v2.0.0
        with:
          tinygo-version: ${{ matrix.tinygo-version }}

      - name: Set up Wasmtime
        uses: bytecodealliance/actions/wasmtime/setup@v1.1.0
        with:
          version: ${{ matrix.wasmtime-version }}

      - name: Add Go wasm exec to $PATH
        run: echo "$(go env GOROOT)/misc/wasm" >> $GITHUB_PATH

      - name: Test with TinyGo
        # This only tests the apex package, not ./internal/build
        # due to TinyGo support for net.UDPConn and net.IPConn
        run: tinygo test -v -bench . ./

      - name: Test WebAssembly with Go + Wasmtime
        env:
          GOOS: wasip1
          GOARCH: wasm
        run: go test -v ./...

      - name: Test WebAssembly with TinyGo + Wasmtime
        # This only tests the apex package, not ./internal/build
        # due to TinyGo support for net.UDPConn and net.IPConn
        env:
          GOOS: wasip1
          GOARCH: wasm
        run: tinygo test -v ./

      - name: Verify repo is unchanged
        run: git diff --exit-code HEAD

  # Tag release
  tag-release:
    name: Tag release
    runs-on: ubuntu-latest
    timeout-minutes: 1
    needs: [test-go, test-tinygo-wasm]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4.1.7
        with:
          fetch-depth: 0 # Retrieve all commit history, so `git rev-list --count` works correctly
          submodules: recursive

      - name: Tag release
        if: github.ref == 'refs/heads/main'
        run: make tag-version

      - name: Notify if failure
        if: ${{ failure() }}
        run: |
          curl -Ss -X POST -H 'Content-type: application/json' --data '{"text":"❌ ZoneDB tests failed"}' ${{ secrets.SLACK_WEBHOOK_URL_GH_ACTIONS }}

      # - name: Notify if success
      #   if: ${{ success() }}
      #   run: |
      #   curl -Ss -X POST -H 'Content-type: application/json' --data '{"text":"✅ ZoneDB tests passed"}' ${{ secrets.SLACK_WEBHOOK_URL_GH_ACTIONS }}
